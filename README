<aside>
1️⃣ 과제 요구 사항: 내 프로젝트의 ERD 작성하기

</aside>

1. 내 프로젝트의 ERD 작성하기
    - ERD란? Entity Relationship Diagram으로 데이터베이스에서 각 데이터들의 관계를 그림으로 표현한 것입니다.
    - 데이터베이스 엔티티들의 관계를 한눈에 확인할 수 있으며, 요구사항에 맞게 개발을 진행할 수 있도록 도움을 받을 수 있습니다.
    - **ERD를 구현할 수 있는 사이트: [DrawSQL](https://drawsql.app/)**
    
    [[DB] 📚 데이터 모델링 개념 및 📈 ERD 다이어그램 그리는법 (1:N 관계)](https://inpa.tistory.com/entry/DB-%F0%9F%93%9A-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%AA%A8%EB%8D%B8%EB%A7%81-1N-%EA%B4%80%EA%B3%84-%F0%9F%93%88-ERD-%EB%8B%A4%EC%9D%B4%EC%96%B4%EA%B7%B8%EB%9E%A8)
    

<aside>
2️⃣ 과제 요구 사항: `**mongoose**`를 `**sequelize**`로 변경하기!

**MongoDB**로 연결되어있던 프로젝트를 **MySQL**로 변경합니다!

</aside>

1. 회원 가입 API
    - 닉네임, 비밀번호, 비밀번호 확인을 **request**에서 전달받기
    - 닉네임은 `최소 3자 이상, 알파벳 대소문자(a~z, A~Z), 숫자(0~9)`로 구성하기
    - 비밀번호는 `최소 4자 이상이며, 닉네임과 같은 값이 포함된 경우 회원가입에 실패`로 만들기
    - 비밀번호 확인은 비밀번호와 정확하게 일치하기
    - 데이터베이스에 존재하는 닉네임을 입력한 채 회원가입 버튼을 누른 경우 "중복된 닉네임입니다." 라는 에러메세지를 **response**에 포함하기
2. 로그인 API
    - 닉네임, 비밀번호를 **request**에서 전달받기
    - 로그인 버튼을 누른 경우 닉네임과 비밀번호가 데이터베이스에 등록됐는지 확인한 뒤, 하나라도 맞지 않는 정보가 있다면 "닉네임 또는 패스워드를 확인해주세요."라는 에러 메세지를 **response**에 포함하기
    - 로그인 성공 시, 로그인에 성공한 유저의 정보를 JWT를 활용하여 클라이언트에게 Cookie로 전달하기
3. 전체 게시글 목록 조회 API
    - 제목, 작성자명(nickname), 작성 날짜를 조회하기
    - 작성 날짜 기준으로 내림차순 정렬하기
4. 게시글 작성 API
    - 토큰을 검사하여, 유효한 토큰일 경우에만 게시글 작성 가능
    - 제목, 작성 내용을 입력하기
5. 게시글 조회 API
    - 제목, 작성자명(nickname), 작성 날짜, 작성 내용을 조회하기 
    (검색 기능이 아닙니다. 간단한 게시글 조회만 구현해주세요.)
6. 게시글 수정 API
    - 토큰을 검사하여, 해당 사용자가 작성한 게시글만 수정 가능
7. 게시글 삭제 API
    - 토큰을 검사하여, 해당 사용자가 작성한 게시글만 삭제 가능